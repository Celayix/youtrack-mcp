name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  validate-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run full test suite
      run: |
        npm run build
        npm test --if-present
        npx tsc --noEmit
        
    - name: Validate version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${GITHUB_REF#refs/tags/v}"
        fi
        
        echo "Validating version: $VERSION"
        
        # Check version format
        if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
          echo "❌ Invalid version format: $VERSION"
          exit 1
        fi
        
        # Check package.json version matches
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        if [ "$VERSION" != "$PACKAGE_VERSION" ]; then
          echo "⚠️ Version mismatch: tag=$VERSION, package.json=$PACKAGE_VERSION"
          echo "Updating package.json version..."
          npm version $VERSION --no-git-tag-version
        fi
        
        echo "✅ Version validated: $VERSION"

  build-release:
    runs-on: ubuntu-latest
    needs: validate-release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Create release package
      run: |
        # Determine version
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${GITHUB_REF#refs/tags/v}"
        fi
        
        echo "Creating release package for version: $VERSION"
        
        # Create release directory
        mkdir -p release
        
        # Copy essential files
        cp -r dist release/
        cp package.json release/
        cp README.md release/
        cp WORKFLOW_STATE_MANAGEMENT.md release/
        cp STATE_MANAGEMENT_ENHANCEMENT_COMPLETE.md release/ 2>/dev/null || true
        
        # Copy setup scripts if they exist
        cp setup.sh release/ 2>/dev/null || true
        cp start-mcp.sh release/ 2>/dev/null || true
        
        # Create installation script
        cat > release/install.sh << 'EOF'
        #!/bin/bash
        set -e
        
        echo "🚀 Installing YouTrack MCP Server..."
        
        # Check Node.js version
        if ! command -v node &> /dev/null; then
          echo "❌ Node.js is required but not installed"
          exit 1
        fi
        
        NODE_VERSION=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
        if [ "$NODE_VERSION" -lt 18 ]; then
          echo "❌ Node.js 18+ required, found v$NODE_VERSION"
          exit 1
        fi
        
        # Install dependencies
        npm install --production
        
        echo "✅ YouTrack MCP Server installed successfully!"
        echo ""
        echo "📋 Next steps:"
        echo "1. Set up your YouTrack credentials in environment variables"
        echo "2. Configure your MCP client to use this server"
        echo "3. See README.md for detailed setup instructions"
        EOF
        
        chmod +x release/install.sh
        
        # Create release info
        cat > release/release-info.json << EOF
        {
          "version": "$VERSION",
          "releaseDate": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
          "gitCommit": "$GITHUB_SHA",
          "gitTag": "$GITHUB_REF_NAME",
          "buildEnvironment": {
            "nodeVersion": "$(node --version)",
            "npmVersion": "$(npm --version)",
            "platform": "$(uname -s)",
            "arch": "$(uname -m)"
          },
          "features": {
            "toolCount": "$(grep -c 'name:' src/tools.ts || echo 'unknown')",
            "stateManagement": true,
            "ganttCharts": true,
            "knowledgeBase": true,
            "timeTracking": true
          }
        }
        EOF
        
        # Create tarball
        cd release
        tar -czf "../youtrack-mcp-v$VERSION.tar.gz" .
        cd ..
        
        echo "✅ Release package created: youtrack-mcp-v$VERSION.tar.gz"
        ls -la *.tar.gz
        
    - name: Upload release artifact
      uses: actions/upload-artifact@v4
      with:
        name: youtrack-mcp-release
        path: |
          *.tar.gz
          release/
        retention-days: 90

  create-github-release:
    runs-on: ubuntu-latest
    needs: build-release
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download release artifact
      uses: actions/download-artifact@v4
      with:
        name: youtrack-mcp-release
        
    - name: Generate release notes
      run: |
        VERSION="${GITHUB_REF#refs/tags/v}"
        
        cat > release-notes.md << EOF
        # YouTrack MCP Server v$VERSION
        
        ## 🚀 Features
        
        This release includes:
        
        - **58+ YouTrack Integration Tools** - Complete YouTrack REST API coverage
        - **State Management Workflow** - Dedicated tools for issue lifecycle management
        - **Gantt Chart Support** - Project timeline and dependency visualization  
        - **Knowledge Base Integration** - Article management and hierarchical organization
        - **Time Tracking** - Work logging and reporting capabilities
        - **Advanced Project Analytics** - Critical path analysis and resource allocation
        
        ## 🎯 State Management Tools (New!)
        
        - \`complete_issue\` - Mark work as done with proper resolution
        - \`start_working_on_issue\` - Begin work with auto-assignment
        - \`change_issue_state\` - Custom state transitions with validation
        - \`get_issue_workflow_states\` - View available workflow states
        - \`get_my_active_issues\` - Monitor current workload
        
        ## 📦 Installation
        
        \`\`\`bash
        # Download and extract
        wget https://github.com/itsalfredakku/youtrack-mcp/releases/download/v$VERSION/youtrack-mcp-v$VERSION.tar.gz
        tar -xzf youtrack-mcp-v$VERSION.tar.gz
        cd release
        
        # Install
        ./install.sh
        \`\`\`
        
        ## 🔧 Configuration
        
        Set up your environment variables:
        \`\`\`bash
        export YOUTRACK_BASE_URL="https://your-instance.youtrack.cloud"
        export YOUTRACK_TOKEN="your-token-here"
        export PROJECT_ID="your-default-project"  # Optional
        \`\`\`
        
        ## 📚 Documentation
        
        - [State Management Guide](WORKFLOW_STATE_MANAGEMENT.md)
        - [Complete Setup Instructions](README.md)
        - [Enhancement Details](STATE_MANAGEMENT_ENHANCEMENT_COMPLETE.md)
        
        ## 🐛 Bug Fixes & Improvements
        
        - Enhanced error handling for API edge cases
        - Improved content duplication prevention
        - Better workflow state validation
        - Comprehensive tool documentation
        
        ---
        
        **Full Changelog**: [Compare v$VERSION](https://github.com/itsalfredakku/youtrack-mcp/compare/v$VERSION)
        EOF
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: YouTrack MCP Server ${{ github.ref_name }}
        body_path: release-notes.md
        draft: false
        prerelease: ${{ contains(github.ref_name, '-') }}
        
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: youtrack-mcp-${{ github.ref_name }}.tar.gz
        asset_name: youtrack-mcp-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip

  notify-release:
    runs-on: ubuntu-latest
    needs: create-github-release
    if: always() && (needs.create-github-release.result == 'success' || needs.build-release.result == 'success')
    
    steps:
    - name: Notify release completion
      run: |
        VERSION="${GITHUB_REF#refs/tags/v}"
        if [ -z "$VERSION" ]; then
          VERSION="${{ github.event.inputs.version }}"
        fi
        
        echo "🎉 YouTrack MCP Server v$VERSION release completed!"
        echo ""
        echo "📋 Release Summary:"
        echo "  Version: $VERSION"
        echo "  Commit: $GITHUB_SHA"
        echo "  Build Time: $(date -u)"
        echo ""
        echo "🔗 Links:"
        echo "  Repository: https://github.com/$GITHUB_REPOSITORY"
        echo "  Release: https://github.com/$GITHUB_REPOSITORY/releases/tag/v$VERSION"
        echo ""
        echo "✅ Release workflow completed successfully!"
